name: Python Package

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        pytest tests/ --cov=prompt_manager

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    
    - name: Prepare clean source
      run: |
        # Create a fresh directory for build
        CLEAN_DIR="../clean-build"
        mkdir -p "$CLEAN_DIR/prompt_manager"
        
        # Copy only the essential Python files
        echo "Copying Python package files..."
        cp -r prompt_manager/* "$CLEAN_DIR/prompt_manager/"
        
        # Copy package files
        echo "Copying package files..."
        cp setup.py "$CLEAN_DIR/"
        cp MANIFEST.in "$CLEAN_DIR/"
        cp README.md "$CLEAN_DIR/"
        cp requirements.txt "$CLEAN_DIR/"
        
        # Clean up any Bazel artifacts
        echo "Removing Bazel artifacts..."
        find "$CLEAN_DIR" -name "bazel-*" -type l -delete
        find "$CLEAN_DIR" -name ".bazel*" -type f -delete
        find "$CLEAN_DIR" -name "BUILD" -type f -delete
        find "$CLEAN_DIR" -name "WORKSPACE" -type f -delete
        
        # Remove Python cache files
        echo "Removing Python cache..."
        find "$CLEAN_DIR" -type d -name "__pycache__" -exec rm -rf {} +
        find "$CLEAN_DIR" -type f -name "*.pyc" -delete
        
        # List all files for verification
        echo "Files in clean directory:"
        find "$CLEAN_DIR" -type f
        
        # Verify no Bazel files exist
        echo "Checking for Bazel files..."
        if find "$CLEAN_DIR" -name "bazel*" -o -name ".bazel*" -o -name "BUILD" -o -name "WORKSPACE" | grep .; then
          echo "ERROR: Found Bazel files in clean source!"
          exit 1
        fi
    
    - name: Build package
      run: |
        cd ../clean-build
        python -m build
    
    - name: Upload dist artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.python-version }}
        path: ../clean-build/dist/
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') && matrix.python-version == '3.8'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ../clean-build/dist/*.whl
          ../clean-build/dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
